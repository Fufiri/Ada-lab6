with Ada.Text_IO; use Ada.Text_IO;
with Ada.Integer_Text_Io; use Ada.Integer_Text_Io;
with Ada.Sequential_IO; 


procedure lab6an is
   
  
   
   type I_Array_Type is
     array (1..10) of Integer;
   
   Nummer_Error : exception; -- om talet är större än 15
   
      type Person_Type is
      record
	 Efternamn: String(1..20); 
	 Fornamn: String(1..20);
	 Gatuadress: String(1..20);
	 Postadress: String(1..20);
	 Antal: Integer;
	 Intressen: I_Array_Type;
      end record;
      
      package Person_Bin is
	 new Ada.Sequential_IO(Person_Type);
      use Person_Bin;
--------------------------------
function Contains(Item: in Integer; List: in I_Array_Type) return Boolean is
      
   begin
      
      for I in 1..10 loop
	 if Item = List(I) then
	    return True;
	 end if;
      end loop;
      
      return False;
      
   end Contains;
----------------------------------      
----------------------------------
procedure Get(Item: out I_Array_Type) is
   
   I_Temp: I_Array_Type;
   Nummer: Integer;
   Length: Integer := 0;
   
begin
   
 I_Temp := (others => 0); 
   
   loop
      Get(Nummer);
      exit when (Nummer = 0) or (Length >= 10);
      if (Nummer >= 16) or (Nummer < 0) then
	 raise Nummer_Error;
      elsif not Contains(Nummer, I_Temp) then
	 Length := Length+1;
	 I_Temp(Length) := Nummer;
      end if;
   end loop;
   
   Item := I_Temp;
   
end Get;
-----------------------------------
-----------------------------------
procedure Put(File: in Ada.Text_IO.File_Type; Item: in I_Array_Type) is   
   
begin
   
   for I in 1..10 loop
      Put(File, Item(I));
   end loop;
   
end Put;
-----------------------------------
----------------------------------
procedure Put(File: in Ada.Text_Io.File_Type; Item: in Person_Type) is
   
   
begin
   
   Ada.Text_IO.Put(File, Item.Efternamn);
   Ada.Text_IO.Put(File, Item.Fornamn);
   Ada.Text_IO.Put(File, Item.Gatuadress);
   Ada.Text_IO.Put(File, Item.Postadress);
   Ada.Integer_Text_IO.Put(File, Item.Antal);
   Put(File, Item.Intressen);
   
end Put;
----------------------------------
-----------------------------------
procedure I_N(L : in I_Array_Type; R : in I_Array_Type; CA : out I_Array_Type; LE: out Integer) is
   
   CompArr: I_Array_Type; 
   Length: Integer := 1;
   
begin
   
   CompArr := (others => 0);
   
   for I in 1..10 loop
      for N in 1..10 loop
	 if L(I) = R(N) then
	     Length := Length+1;
	    if Length >= 11 then
	       null;
	    elsif Length < 11 then
	       CompArr(Length) := L(I);
	    end if;
	 end if;
      end loop;
   end loop;
   
   
end I_N;
----------------------------------

   Reg : Person_Bin.File_Type;
   Output: Ada.Text_Io.File_Type;
   Person_Data : Person_Type;
   IAT : I_Array_Type := (others => 0);
   Length : Integer;
   ComparedArray: I_Array_Type; 
   
begin
   
   Person_Bin.Open(Reg, In_File, "REG.BIN");
   Create(Output, Out_File, "RESULT.TXT");
   
   Put("Ange en Följd av intressen 1 till 15, max 10 st. Avsluta med 0: ");
  
   Get(IAT);
    
   while not End_Of_File(Reg) loop
      Person_Bin.Read(Reg, Person_Data);
      I_N(IAT, Person_Data.Intressen, ComparedArray, Length);
	if Length = 0 then
	 exit;
      elsif ComparedArray = Person_Data.Intressen then
	 Put(Output, Person_Data);
      end if;
   end loop;
   
   Person_Bin.Close(Reg);
   Close(Output);

end lab6an;
